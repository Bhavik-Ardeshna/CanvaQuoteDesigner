[{"/home/user/Desktop/OSMQuoteDesigner/quote-designer/src/index.js":"1","/home/user/Desktop/OSMQuoteDesigner/quote-designer/src/reportWebVitals.js":"2","/home/user/Desktop/OSMQuoteDesigner/quote-designer/src/App.js":"3","/home/user/Desktop/OSMQuoteDesigner/quote-designer/src/Components/Navbar.js":"4","/home/user/Desktop/OSMQuoteDesigner/quote-designer/src/Pages/Home.js":"5","/home/user/Desktop/OSMQuoteDesigner/quote-designer/src/Pages/Editor.js":"6","/home/user/Desktop/OSMQuoteDesigner/quote-designer/src/Components/Canvas.js":"7"},{"size":592,"mtime":1611840224866,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1611830980195,"results":"10","hashOfConfig":"9"},{"size":679,"mtime":1612204469476,"results":"11","hashOfConfig":"9"},{"size":1490,"mtime":1611866045207,"results":"12","hashOfConfig":"9"},{"size":1599,"mtime":1612202285476,"results":"13","hashOfConfig":"9"},{"size":11816,"mtime":1613496761308,"results":"14","hashOfConfig":"9"},{"size":5921,"mtime":1612506825295,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"dkybp1",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"/home/user/Desktop/OSMQuoteDesigner/quote-designer/src/index.js",[],["35","36"],"/home/user/Desktop/OSMQuoteDesigner/quote-designer/src/reportWebVitals.js",[],"/home/user/Desktop/OSMQuoteDesigner/quote-designer/src/App.js",["37","38","39"],"\nimport './App.css';\nimport { Navbar } from './Components/Navbar';\nimport { Home } from './Pages/Home';\nimport { BrowserRouter as Router, Switch, Route, NavLink } from 'react-router-dom'\nimport { Editor } from './Pages/Editor';\nimport React, { useState } from 'react'\n\nconst data = {\n  thought: \"Today is a wonderful day to have a wonderful day!\",\n  author: \"J. K. Rowling\"\n}\n\nfunction App() {\n\n\n  return (\n    <>\n\n      <Switch>\n        <Route path='/editor'>\n          <Editor thought={data.thought} author={data.author} />\n        </Route>\n        <Route path='/' >\n          <Navbar />\n          <Home />\n        </Route>\n\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","/home/user/Desktop/OSMQuoteDesigner/quote-designer/src/Components/Navbar.js",["40","41","42"],"import React from 'react'\n\nexport const Navbar = () => {\n    return (\n        <>\n            <nav class=\"bg-blue-300\">\n                <div class=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n                    <div class=\"relative flex items-center justify-between h-16\">\n                        <div class=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n\n                        </div>\n                        <div class=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                            <div class=\"flex-shrink-0 text-black flex items-center\">\n                                <h1>OSM Quote Designer</h1>\n                            </div>\n                            <div class=\"hidden sm:block sm:ml-6\">\n                                <div class=\"flex space-x-4\">\n                                    <a href=\"#\" class=\"text-black-300 hover:bg-gray-700 hover:text-black px-3 py-2 rounded-md text-sm font-medium\">Team</a>\n                                    <a href=\"#\" class=\"text-black-300 hover:bg-gray-700 hover:text-black px-3 py-2 rounded-md text-sm font-medium\">Projects</a>\n                                    <a href=\"#\" class=\"text-black-300 hover:bg-gray-700 hover:text-black px-3 py-2 rounded-md text-sm font-medium\">Calendar</a>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n\n\n\n            </nav>\n\n\n\n        </>\n    )\n}\n","/home/user/Desktop/OSMQuoteDesigner/quote-designer/src/Pages/Home.js",["43","44"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport image1 from '../Image/groot.jpeg';\nexport const Home = () => {\n    return (\n        <>\n            <div class=\"my-5 mx-10 px-5  w-96 bg-black \">\n\n                <article class=\"overflow-hidden rounded-lg shadow-lg\">\n\n                    <img alt=\"Placeholder\" class=\"block h-96 w-96\" src={image1} />\n\n\n                    <header class=\"flex items-center justify-between leading-tight p-2 md:p-4\">\n                        <h1 class=\"text-lg\">\n                            <a class=\"no-underline hover:underline text-white\" href=\"#\">\n                                Today is a wonderful day to have a wonderful day!\n                            </a>\n                        </h1>\n                    </header>\n\n                    <footer class=\"flex items-center justify-between leading-none p-2 md:p-4\">\n                        <a class=\"flex items-center no-underline hover:underline text-white\" href=\"#\">\n                            <p class=\"ml-2 text-sm\">\n                                J. K. Rowling\n                            </p>\n                        </a>\n                    </footer>\n                    <Link to='/editor' className='py-1 px-2 bg-yellow-500 rounded-full text-1xl hover:bg-yellow-300 transition duration-300 ease-in-out flex items-center animate-bounce'>\n                        <h1 className='text-1xl font-black ml-20'>\n                            Create Quote\n                            </h1>\n                    </Link>\n\n                </article>\n\n            </div>\n        </>\n    )\n}\n","/home/user/Desktop/OSMQuoteDesigner/quote-designer/src/Pages/Editor.js",["45","46","47","48","49","50","51","52","53","54","55"],"/home/user/Desktop/OSMQuoteDesigner/quote-designer/src/Components/Canvas.js",["56","57","58","59","60","61","62"],"import React, { Component } from 'react';\nimport useImage from 'use-image';\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Image, Rect, Transformer, Text } from \"react-konva\";\nimport back from '../Image/back.jpg';\nimport canImg from '../Image/WD_Bhavik.jpeg';\nimport image3 from '../Image/bossbaby.jpeg';\nimport image4 from '../Image/groot.jpeg';\n\nconst CanvasThought = ({ x, y, color, fontSize, fontFamily, text }) => (\n\n    < Text\n        name=\"CanvasThought\"\n        text={text}\n        x={x}\n        y={y}\n        fontSize={fontSize}\n        fontFamily={fontFamily}\n        fill={color}\n        width={300}\n        padding={20}\n        align={'center'}\n        draggable\n    />\n);\n\nconst CanvasAuthor = ({ x, y, color, fontSize, fontFamily, text }) => (\n\n    < Text\n        name=\"CanvasAuthor\"\n        text={text}\n        x={x}\n        y={y}\n        fontSize={fontSize}\n        fontFamily={fontFamily}\n        fill={color}\n        width={300}\n        padding={20}\n        align={'center'}\n        draggable\n    />\n);\n\nclass URLImage extends React.Component {\n    state = {\n        image: null\n    };\n    componentDidMount() {\n        this.loadImage();\n    }\n    componentDidUpdate(oldProps) {\n        if (oldProps.src !== this.props.src) {\n            this.loadImage();\n        }\n    }\n    componentWillUnmount() {\n        this.image.removeEventListener('load', this.handleLoad);\n    }\n    loadImage() {\n        // save to \"this\" to remove \"load\" handler on unmount\n        this.image = new window.Image();\n        this.image.src = this.props.src;\n        this.image.addEventListener('load', this.handleLoad);\n    }\n    handleLoad = () => {\n        // after setState react-konva will update canvas and redraw the layer\n        // because \"image\" property is changed\n        this.setState({\n            image: this.image\n        });\n        // if you keep same image object during source updates\n        // you will have to update layer manually:\n        // this.imageNode.getLayer().batchDraw();\n    };\n    render() {\n        return (\n            <Image\n                x={this.props.x}\n                y={this.props.y}\n                width={this.props.width}\n                height={this.props.height}\n                image={this.state.image}\n                ref={node => {\n                    this.imageNode = node;\n                }}\n            />\n        );\n    }\n}\n\n\nclass TransformerComponent extends React.Component {\n    componentDidMount() {\n        this.checkNode();\n    }\n    componentDidUpdate() {\n        this.checkNode();\n    }\n    checkNode() {\n        const stage = this.transformer.getStage();\n        const { selectedShapeName } = this.props;\n        const selectedNode = stage.findOne(\".\" + selectedShapeName);\n        if (selectedNode === this.transformer.node()) {\n            return;\n        }\n        if (selectedNode) {\n            this.transformer.attachTo(selectedNode);\n        } else {\n            this.transformer.detach();\n        }\n        this.transformer.getLayer().batchDraw();\n    }\n    render() {\n        return (\n            <Transformer\n                ref={node => {\n                    this.transformer = node;\n                }}\n            />\n        );\n    }\n}\nclass Canvas extends Component {\n    state = {\n        image: null,\n        selectedShapeName: \"\",\n    };\n    componentDidMount() {\n        const image = new window.Image();\n\n        image.onload = () => {\n            this.setState(\n                {\n                    image\n                },\n                () => {\n                    this.transformer.attachTo(this.image);\n                }\n            );\n        };\n        image.src = this.props.image;\n        console.log(this.props.fontFamily)\n    }\n    handleTransform = () => {\n        const props = {\n            x: this.image.x(),\n            y: this.image.y(),\n            rotation: this.image.rotation(),\n            width: this.image.width(),\n            height: this.image.height(),\n            scaleX: this.image.scaleX(),\n            scaleY: this.image.scaleY()\n        };\n\n    };\n\n    handleStageClick = e => {\n        this.setState({\n            selectedShapeName: e.target.name()\n        });\n    };\n    render() {\n        return (\n            <div>\n\n                <Stage width={window.innerWidth} height={window.innerHeight}>\n                    <Layer>\n                        <URLImage src={back} x={400} y={90} width={850} height={850} />\n                        <Image\n                            image={this.state.image}\n                            ref={node => {\n                                this.image = node;\n                            }}\n                            x={500}\n                            y={50}\n                            width={840}\n                            height={840}\n                            draggable\n                            onTransform={this.handleTransform}\n                            onDragMove={this.handleTransform}\n                        />\n                        <Transformer\n                            ref={node => {\n                                this.transformer = node;\n                            }}\n                        />\n                    </Layer>\n\n                    <Layer onClick={this.handleStageClick} >\n                        <CanvasThought x={550} y={170} color={this.props.color} text={this.props.thought} author={this.props.author} fontFamily={this.props.fontFamily} fontSize={this.props.fontSize} />\n                        <CanvasAuthor x={550} y={600} color={this.props.color} text={this.props.author} fontFamily={this.props.fontFamily} fontSize={this.props.fontSize} />\n\n                        <TransformerComponent\n                            selectedShapeName={this.state.selectedShapeName}\n                        />\n                    </Layer>\n                </Stage>\n\n            </div>\n        );\n    }\n}\n\n\n\n\nexport default Canvas;",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":5,"column":27,"nodeType":"69","messageId":"70","endLine":5,"endColumn":33},{"ruleId":"67","severity":1,"message":"71","line":5,"column":50,"nodeType":"69","messageId":"70","endLine":5,"endColumn":57},{"ruleId":"67","severity":1,"message":"72","line":7,"column":17,"nodeType":"69","messageId":"70","endLine":7,"endColumn":25},{"ruleId":"73","severity":1,"message":"74","line":18,"column":37,"nodeType":"75","endLine":18,"endColumn":148},{"ruleId":"73","severity":1,"message":"74","line":19,"column":37,"nodeType":"75","endLine":19,"endColumn":148},{"ruleId":"73","severity":1,"message":"74","line":20,"column":37,"nodeType":"75","endLine":20,"endColumn":148},{"ruleId":"73","severity":1,"message":"74","line":17,"column":29,"nodeType":"75","endLine":17,"endColumn":89},{"ruleId":"73","severity":1,"message":"74","line":24,"column":25,"nodeType":"75","endLine":24,"endColumn":103},{"ruleId":"67","severity":1,"message":"76","line":15,"column":19,"nodeType":"69","messageId":"70","endLine":15,"endColumn":27},{"ruleId":"77","severity":1,"message":"78","line":53,"column":33,"nodeType":"75","endLine":53,"endColumn":68},{"ruleId":"73","severity":1,"message":"74","line":53,"column":33,"nodeType":"75","endLine":53,"endColumn":68},{"ruleId":"77","severity":1,"message":"78","line":56,"column":33,"nodeType":"75","endLine":56,"endColumn":66},{"ruleId":"73","severity":1,"message":"74","line":56,"column":33,"nodeType":"75","endLine":56,"endColumn":66},{"ruleId":"77","severity":1,"message":"78","line":59,"column":33,"nodeType":"75","endLine":59,"endColumn":67},{"ruleId":"73","severity":1,"message":"74","line":59,"column":33,"nodeType":"75","endLine":59,"endColumn":67},{"ruleId":"73","severity":1,"message":"74","line":182,"column":45,"nodeType":"75","endLine":182,"endColumn":129},{"ruleId":"73","severity":1,"message":"74","line":183,"column":45,"nodeType":"75","endLine":183,"endColumn":155},{"ruleId":"73","severity":1,"message":"74","line":184,"column":45,"nodeType":"75","endLine":184,"endColumn":155},{"ruleId":"73","severity":1,"message":"74","line":185,"column":45,"nodeType":"75","endLine":185,"endColumn":155},{"ruleId":"67","severity":1,"message":"79","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":16},{"ruleId":"67","severity":1,"message":"80","line":3,"column":10,"nodeType":"69","messageId":"70","endLine":3,"endColumn":16},{"ruleId":"67","severity":1,"message":"81","line":4,"column":31,"nodeType":"69","messageId":"70","endLine":4,"endColumn":35},{"ruleId":"67","severity":1,"message":"82","line":6,"column":8,"nodeType":"69","messageId":"70","endLine":6,"endColumn":14},{"ruleId":"67","severity":1,"message":"83","line":7,"column":8,"nodeType":"69","messageId":"70","endLine":7,"endColumn":14},{"ruleId":"67","severity":1,"message":"84","line":8,"column":8,"nodeType":"69","messageId":"70","endLine":8,"endColumn":14},{"ruleId":"67","severity":1,"message":"85","line":145,"column":15,"nodeType":"69","messageId":"70","endLine":145,"endColumn":20},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setImage' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'useImage' is defined but never used.","'render' is defined but never used.","'Rect' is defined but never used.","'canImg' is defined but never used.","'image3' is defined but never used.","'image4' is defined but never used.","'props' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]